<div class="container center-card">
    <div class="card fixed-width-card">

    @{
        switch (OIDCPage)
        {
            case OIDCPage.SigninUserName:
                <SignInUserName SetStep="SetStep" ShowInfoMessage="ShowInfoMessage" />
                break;
            case OIDCPage.SignUpUserName:
                <SignUpUserName SetStep="SetStep" ShowInfoMessage="ShowInfoMessage" />
                break;
            case OIDCPage.SigninUserNamePassword:
                <SignInUserNamePassword SetStep="SetStep" />
                break;
            case OIDCPage.VerifyCode:
                <VerifyCode SetStep="SetStep" ShowInfoMessage="ShowInfoMessage" />
                break;
            case OIDCPage.ForgotPassword:
                <ForgotPassword SetStep="SetStep" ShowInfoMessage="ShowInfoMessage" />
                break;
            case OIDCPage.ResetPassword:
                <ResetPassword SetStep="SetStep" ShowInfoMessage="ShowInfoMessage" />
                break;
        }
    }

    <div class="modal" style="display:@(showInfoMessage ? "block" : "none")">
        <div class="modal-content">
            <span class="close" @onclick="CloseInfoMessage">&times;</span>
            <p>@infoMessage</p>
        </div>
    </div>
   

    </div>
</div>

@code {
    [CascadingParameter]
    public OIDCModel Model { get; set; }

    public OIDCPage OIDCPage { get; set; } = OIDCPage.SigninUserName;
    private bool showInfoMessage = false;
    private string infoMessage = string.Empty;
    private void SetStep(OIDCPage oidcPage)
    {
        OIDCPage = oidcPage;
        StateHasChanged();
    }
    private void ShowInfoMessage(string message)
    {
        infoMessage = message;
        showInfoMessage = true;
        StateHasChanged();
    }

    private void CloseInfoMessage()
    {
        showInfoMessage = false;
        StateHasChanged();
    }
}
